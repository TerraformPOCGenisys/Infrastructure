

apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: k8s-karpenter-nodepool
spec:
  template:
    metadata:
      labels:
        intent: k8s-karpenter-nodepool
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        # - key: node.kubernetes.io/instance-type
        #   operator: In
        #   values: [m6a.large,m6a.xlarge,m6a.2xlarge]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["t","c","m","r"]
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["medium","large","xlarge"]
      nodeClassRef:
        name: k8s-karpenter-nodepool
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 720h # 30 * 24h = 720h

---

apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: k8s-karpenter-nodepool
spec:
  amiFamily: AL2023 # Amazon Linux 2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      encrypted: true
      volumeSize: 30Gi
      volumeType: gp3
  role: "${ROLE}" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "${cluster_name}" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery/${cluster_name}-node: "${cluster_name}" # replace with your cluster name
  tags:
    karpenter.sh/discovery: ${cluster_name}
#    Name: ${cluster_name}
    Name: "k8s-karpenter-nodepool"
