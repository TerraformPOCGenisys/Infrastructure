apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: k8s-audiocart-frontend
spec:
  template:
    metadata:
      labels:
        intent: k8s-audiocart-frontend
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot","on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["t","c","m","r"]
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["medium","large","xlarge"]
        - key: kubernetes.io/arch
          operator: In
          values: ["x86_64","amd64"]
      nodeClassRef:
        name: k8s-audiocart-frontend
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 720h # 30 * 24h = 720h

--- 

apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: k8s-audiocart-frontend
spec:
  amiFamily: AL2023 # Amazon Linux 2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      encrypted: true
      volumeSize: 60Gi
      volumeType: gp3
  role: "${ROLE}" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "${cluster_name}" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery/${cluster_name}-node: "${cluster_name}" # replace with your cluster name
  tags:
    karpenter.sh/discovery: ${cluster_name}
#    Name: ${cluster_name}
    Name: "Audiocart-K8s-Frontend"
    CreatedBy:  "Manan.g"
    CreatedThrough:   "Terraform"
    Owner:  "Handelnine"
    Brand:  "Audiocart"
    Environment:  "Prod"
    App-Type: "Frontend"

---
#############################################################################################################################################


apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: k8s-audiocart-backend-on-demand
spec:
  template:
    metadata:
      labels:
        intent: k8s-audiocart-backend
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: [m6a.large,m6a.xlarge,m6a.2xlarge]
        # - key: karpenter.k8s.aws/instance-size
        #   operator: In
        #   values: ["xlarge"]
      nodeClassRef:
        name: k8s-audiocart-backend
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 720h # 30 * 24h = 720h

---

apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: k8s-audiocart-backend-spot
spec:
  template:
    metadata:
      labels:
        intent: k8s-audiocart-backend
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: [m6a.large,m6a.xlarge,m6a.2xlarge]
        # - key: karpenter.k8s.aws/instance-size
        #   operator: In
        #   values: ["xlarge"]
      nodeClassRef:
        name: k8s-audiocart-backend
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 720h # 30 * 24h = 720h









---

apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: k8s-audiocart-backend
spec:
  amiFamily: AL2023 # Amazon Linux 2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      encrypted: true
      volumeSize: 30Gi
      volumeType: gp3
  role: "${ROLE}" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "${cluster_name}" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery/${cluster_name}-node: "${cluster_name}" # replace with your cluster name
  tags:
    karpenter.sh/discovery: ${cluster_name}
#    Name: ${cluster_name}
    Name: "Audiocart-K8s-Backend"
    CreatedBy:  "Manan.g"
    CreatedThrough:   "Terraform"
    Owner:  "Handelnine"
    Brand:  "Audiocart"
    Environment:  "Prod"
    App-Type: "Backend"

---
############################################################################################################################################################################


apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: k8s-audiocart-sidekiq
spec:
  template:
    metadata:
      labels:
        intent: k8s-audiocart-sidekiq
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot","on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["t","c","m","r"]
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["small","medium","large","xlarge"]
        - key: kubernetes.io/arch
          operator: In
          values: ["x86_64","amd64"]
      nodeClassRef:
        name: k8s-audiocart-sidekiq
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 720h # 30 * 24h = 720h

--- 

apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: k8s-audiocart-sidekiq
spec:
  amiFamily: AL2023 # Amazon Linux 2
  blockDeviceMappings:
  - deviceName: /dev/xvda
    ebs:
      encrypted: true
      volumeSize: 30Gi
      volumeType: gp3
  role: "${ROLE}" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "${cluster_name}" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery/${cluster_name}-node: "${cluster_name}" # replace with your cluster name
  tags:
    karpenter.sh/discovery: ${cluster_name}
#    Name: ${cluster_name}
    Name: "Audiocart-K8s-Sidekiq"
    CreatedBy:  "Manan.g"
    CreatedThrough:   "Terraform"
    Owner:  "Handelnine"
    Brand:  "Audiocart"
    Environment:  "Prod"
    App-Type: "Sidekiq"